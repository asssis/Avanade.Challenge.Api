@model Avanade.Challenge.Api.Infra.Database.Domain.Phrase

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<h4>Phrase</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form action="/Phrases/Edit/@Model.Id" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="Id" value="@Model.Id"/>
            <div class="form-group">
                <label asp-for="Id" class="control-label">Id</label>
                <input asp-for="Id" disabled="disabled" value="@Model.Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Expression" class="control-label">Expression</label>
                <input asp-for="Expression" name="Expression" class="form-control" value="@Model.Expression" />
                <span asp-validation-for="Expression" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="TopicId" class="control-label">Topic</label> 
                @Html.DropDownList("TopicId", (List<SelectListItem>)ViewBag.listTopics, new { @class="form-control" } )      
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a href="/Phrases">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
